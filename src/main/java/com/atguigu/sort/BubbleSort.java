package com.atguigu.sort;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;


/**
 * 时间复杂度为O(n^2)，空间复杂度为O(1)。
 * 优化冒泡排序：https://www.cnblogs.com/9dragon/p/10705097.html
 */
public class BubbleSort {

	public static void main(String[] args) {
		int arr[] = {3, 9, -1, 10, 20};
		System.out.println("排序前");
		System.out.println(Arrays.toString(arr));
		bubbleSort(arr);

		System.out.println("排序后");
		System.out.println(Arrays.toString(arr));

		
	}
	
	// 将前面额冒泡排序算法，封装成一个方法
	public static void bubbleSort(int[] arr) {

		int lastExchIndex=0;
		//无序边界，每次比较比到这里就可以了
		int sortBorder=arr.length-1;

		for (int i = 0; i < arr.length - 1; i++) {
			boolean flag = true; // 标识变量，表示是否进行过交换
			int temp = 0; // 临时变量
			for (int j = 0; j < sortBorder; j++) {
				// 如果前面的数比后面的数大，则交换
				if (arr[j] > arr[j + 1]) {
					temp = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = temp;
					flag = false;
					//更新最后一次交换的位置
					lastExchIndex=j;
				}
			}
			sortBorder=lastExchIndex;
			if(flag){
				break;
			}

			System.out.println("第" + (i + 1) + "趟排序后的数组");
			System.out.println(Arrays.toString(arr));

		}
	}

}
